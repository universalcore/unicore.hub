"""replace App password with key, add url and created fields

Revision ID: 53661742b286
Revises: 5e5b6527827
Create Date: 2015-03-20 16:09:01.674956

"""

# revision identifiers, used by Alembic.
revision = '53661742b286'
down_revision = '5e5b6527827'
branch_labels = None
depends_on = None

import hmac
import uuid
from hashlib import sha1

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.sql import table, column


app_helper = table(
    'apps',
    column('uuid', sqlalchemy_utils.UUIDType(binary=False)),
    column('key', sa.Unicode()))


def make_key():
    return hmac.new(uuid.uuid4().bytes, digestmod=sha1).hexdigest()


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('apps', sa.Column('created', sa.DateTime(), nullable=False, server_default=sa.func.now()))
    op.add_column('apps', sa.Column('key', sa.Unicode(length=128), nullable=False, server_default=''))
    op.add_column('apps', sa.Column('url', sqlalchemy_utils.types.url.URLType(), nullable=True))
    op.add_column('users', sa.Column('created', sa.DateTime(), nullable=False, server_default=sa.func.now()))
    ### end Alembic commands ###

    connection = op.get_bind()
    # generates a key for existing apps
    for app in connection.execute(app_helper.select()):
        connection.execute(
            app_helper.update()
            .where(app_helper.c.uuid == app.uuid)
            .values(key=make_key()))


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'created')
    op.drop_column('apps', 'url')
    op.drop_column('apps', 'key')
    op.drop_column('apps', 'created')
    ### end Alembic commands ###
